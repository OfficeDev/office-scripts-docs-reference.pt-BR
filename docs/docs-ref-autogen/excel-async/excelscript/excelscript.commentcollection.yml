### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CommentCollection:interface'
    summary: Representa uma coleção de objetos comment que fazem parte da pasta de trabalho.
    name: Excel.CommentCollection
    fullName: Excel.CommentCollection
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.CommentCollection#add:member(1)'
      - 'excel!Excel.CommentCollection#getCount:member(1)'
      - 'excel!Excel.CommentCollection#getItem:member(1)'
      - 'excel!Excel.CommentCollection#getItemAt:member(1)'
      - 'excel!Excel.CommentCollection#getItemByCell:member(1)'
      - 'excel!Excel.CommentCollection#getItemByReplyId:member(1)'
      - 'excel!Excel.CommentCollection#load:member(1)'
  - uid: 'excel!Excel.CommentCollection#add:member(1)'
    summary: Cria um novo comentário com o conteúdo fornecido na célula especificada. Um `InvalidArgument` erro será acionado se o intervalo fornecido for maior que uma célula.
    name: 'add(cellAddress, content, contentType)'
    fullName: 'add(cellAddress, content, contentType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        add(
                    cellAddress: Range | string,
                    content: CommentRichContent | string,
                    contentType?: ContentType
                ): Comment;
      return:
        type:
          - 'excel!Excel.Comment:interface'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Comments");

              // Note that an InvalidArgument error will be thrown if multiple cells passed to `comment.add`.
              sheet.comments.add("A2", "TODO: add data.");
              await context.sync();
          }
          ```
      parameters:
        - id: cellAddress
          description: 'A célula à qual o comentário é adicionado. Pode ser um objeto Range ou uma cadeia de caracteres. Se for uma cadeia de caracteres, ela deve conter o endereço completo, incluindo o nome da planilha. Um `InvalidArgument` erro será acionado se o intervalo fornecido for maior que uma célula.'
          type:
            - 'excel!Excel.CommentCollection#add~0:complex'
        - id: content
          description: 'O conteúdo do comentário. Pode ser um objeto String ou CommentRichContent. As cadeias de caracteres são usadas para texto sem formatação. Os objetos CommentRichContent permitem outros recursos de comentários, como menção.'
          type:
            - 'excel!Excel.CommentCollection#add~1:complex'
        - id: contentType
          description: Opcional. O tipo de conteúdo contido no comentário. O valor padrão é enum`ContentType.Plain`<!-- -->.
          type:
            - 'excel!Excel.ContentType:enum'
  - uid: 'excel!Excel.CommentCollection#getCount:member(1)'
    summary: Obtém o número de comentários na coleção.
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'excel!Excel.CommentCollection#getItem:member(1)'
    summary: Obtém um comentário da coleção com base em seu ID.
    name: getItem(commentId)
    fullName: getItem(commentId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(commentId: string): Comment;'
      return:
        type:
          - 'excel!Excel.Comment:interface'
        description: ''
      parameters:
        - id: commentId
          description: O identificador para o comentário.
          type:
            - string
  - uid: 'excel!Excel.CommentCollection#getItemAt:member(1)'
    summary: Obtém um comentário da coleção com base em sua posição.
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Comment;'
      return:
        type:
          - 'excel!Excel.Comment:interface'
        description: ''
      parameters:
        - id: index
          description: Valor de índice do objeto a ser recuperado. Indexados com zero.
          type:
            - number
  - uid: 'excel!Excel.CommentCollection#getItemByCell:member(1)'
    summary: Obtém o comentário da célula especificada.
    name: getItemByCell(cellAddress)
    fullName: getItemByCell(cellAddress)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemByCell(cellAddress: Range | string): Comment;'
      return:
        type:
          - 'excel!Excel.Comment:interface'
        description: ''
      parameters:
        - id: cellAddress
          description: 'A célula na qual o comentário está. Pode ser um objeto Range ou uma cadeia de caracteres. Se for uma cadeia de caracteres, ela deve conter o endereço completo, incluindo o nome da planilha. Um `InvalidArgument` erro será acionado se o intervalo fornecido for maior que uma célula.'
          type:
            - 'excel!Excel.CommentCollection#getItemByCell~0:complex'
  - uid: 'excel!Excel.CommentCollection#getItemByReplyId:member(1)'
    summary: Obtém o comentário ao qual a resposta fornecida está conectada.
    name: getItemByReplyId(replyId)
    fullName: getItemByReplyId(replyId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemByReplyId(replyId: string): Comment;'
      return:
        type:
          - 'excel!Excel.Comment:interface'
        description: ''
      parameters:
        - id: replyId
          description: O identificador de resposta de comentário.
          type:
            - string
  - uid: 'excel!Excel.CommentCollection#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.Comment:interface'
    name: Comment
    fullName: Excel.Comment
  - uid: 'excel!Excel.CommentCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.CommentCollection#add~1:complex'
    name: CommentRichContent | string
    fullName: Excel.CommentRichContent | string
    spec.typeScript:
      - uid: 'excel!Excel.CommentRichContent:interface'
        name: CommentRichContent
        fullName: Excel.CommentRichContent
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.ContentType:enum'
    name: ContentType
    fullName: Excel.ContentType
  - uid: 'excel!Excel.CommentCollection#getItemByCell~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'