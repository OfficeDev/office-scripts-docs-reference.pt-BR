### YamlMime:TSType
name: Excel.CommentCollection
uid: excel!Excel.CommentCollection:interface
package: excel!
fullName: Excel.CommentCollection
summary: Representa uma coleção de objetos comment que fazem parte da pasta de trabalho.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: add(cellAddress, content, contentType)
  uid: excel!Excel.CommentCollection#add:member(1)
  package: excel!
  fullName: add(cellAddress, content, contentType)
  summary: Cria um novo comentário com o conteúdo fornecido na célula especificada. Um `InvalidArgument` erro será acionado se o intervalo fornecido for maior que uma célula.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      add(
                  cellAddress: Range | string,
                  content: CommentRichContent | string,
                  contentType?: ContentType | "Plain" | "Mention"
              ): Comment;
    parameters:
    - id: cellAddress
      description: A célula à qual o comentário é adicionado. Pode ser um objeto Range ou uma cadeia de caracteres. Se for uma cadeia de caracteres, ela deve conter o endereço completo, incluindo o nome da planilha. Um `InvalidArgument` erro será acionado se o intervalo fornecido for maior que uma célula.
      type: <xref uid="excel!Excel.Range:interface" /> | string
    - id: content
      description: O conteúdo do comentário. Pode ser um objeto String ou CommentRichContent. As cadeias de caracteres são usadas para texto sem formatação. Os objetos CommentRichContent permitem outros recursos de comentários, como menção.
      type: <xref uid="excel!Excel.CommentRichContent:interface" /> | string
    - id: contentType
      description: Opcional. O tipo de conteúdo contido no comentário. O valor padrão é enum `ContentType.Plain`<!-- -->.
      type: "<xref uid=\"excel!Excel.ContentType:enum\" /> | \"Plain\" | \"Mention\"\n        "
    return:
      type: <xref uid="excel!Excel.Comment:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Comments\");\n\n    // Note that an InvalidArgument error will be thrown if multiple cells passed to `comment.add`.\n    sheet.comments.add(\"A2\", \"TODO: add data.\");\n    await context.sync();\n}\n```"
- name: getCount()
  uid: excel!Excel.CommentCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: Obtém o número de comentários na coleção.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): ClientResult<number>;'
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;
      description: ''
- name: getItem(commentId)
  uid: excel!Excel.CommentCollection#getItem:member(1)
  package: excel!
  fullName: getItem(commentId)
  summary: Obtém um comentário da coleção com base em seu ID.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(commentId: string): Comment;'
    parameters:
    - id: commentId
      description: O identificador para o comentário.
      type: string
    return:
      type: <xref uid="excel!Excel.Comment:interface" />
      description: ''
- name: getItemAt(index)
  uid: excel!Excel.CommentCollection#getItemAt:member(1)
  package: excel!
  fullName: getItemAt(index)
  summary: Obtém um comentário da coleção com base em sua posição.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemAt(index: number): Comment;'
    parameters:
    - id: index
      description: Valor de índice do objeto a ser recuperado. Indexados com zero.
      type: number
    return:
      type: <xref uid="excel!Excel.Comment:interface" />
      description: ''
- name: getItemByCell(cellAddress)
  uid: excel!Excel.CommentCollection#getItemByCell:member(1)
  package: excel!
  fullName: getItemByCell(cellAddress)
  summary: Obtém o comentário da célula especificada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemByCell(cellAddress: Range | string): Comment;'
    parameters:
    - id: cellAddress
      description: A célula na qual o comentário está. Pode ser um objeto Range ou uma cadeia de caracteres. Se for uma cadeia de caracteres, ela deve conter o endereço completo, incluindo o nome da planilha. Um `InvalidArgument` erro será acionado se o intervalo fornecido for maior que uma célula.
      type: <xref uid="excel!Excel.Range:interface" /> | string
    return:
      type: <xref uid="excel!Excel.Comment:interface" />
      description: ''
- name: getItemByReplyId(replyId)
  uid: excel!Excel.CommentCollection#getItemByReplyId:member(1)
  package: excel!
  fullName: getItemByReplyId(replyId)
  summary: Obtém o comentário ao qual a resposta fornecida está conectada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemByReplyId(replyId: string): Comment;'
    parameters:
    - id: replyId
      description: O identificador de resposta de comentário.
      type: string
    return:
      type: <xref uid="excel!Excel.Comment:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.CommentCollection#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: cfa2bd9beefc59ac9d6696b33c8bd65124622b10
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49414723"
