### YamlMime:TSType
name: Excel.Workbook
uid: excel!Excel.Workbook:interface
package: excel!
fullName: Excel.Workbook
summary: Workbook é o objeto de nível superior que contém objetos de pasta de trabalho relacionados, como planilhas, tabelas, intervalos, etc. Para saber mais sobre o modelo de objeto de pasta de trabalho, leia [trabalhar com pastas de trabalho usando a API JavaScript do Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks)<!-- -->.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: application
  uid: excel!Excel.Workbook#application:member
  package: excel!
  fullName: application
  summary: Representa a instância do aplicativo Excel que contém esta pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly application: Application;'
    return:
      type: <xref uid="excel!Excel.Application:interface" />
- name: autoSave
  uid: excel!Excel.Workbook#autoSave:member
  package: excel!
  fullName: autoSave
  summary: Especifica se a pasta de trabalho está no modo de salvamento automático.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly autoSave: boolean;'
    return:
      type: boolean
- name: bindings
  uid: excel!Excel.Workbook#bindings:member
  package: excel!
  fullName: bindings
  summary: Representa uma coleção de ligações que fazem parte da pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly bindings: BindingCollection;'
    return:
      type: <xref uid="excel!Excel.BindingCollection:interface" />
- name: calculationEngineVersion
  uid: excel!Excel.Workbook#calculationEngineVersion:member
  package: excel!
  fullName: calculationEngineVersion
  summary: Retorna um número sobre a versão do Mecanismo de Cálculo do Excel.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly calculationEngineVersion: number;'
    return:
      type: number
- name: chartDataPointTrack
  uid: excel!Excel.Workbook#chartDataPointTrack:member
  package: excel!
  fullName: chartDataPointTrack
  summary: True se todos os gráficos na pasta de trabalho estiverem rastreando os pontos de dados reais aos quais eles estão anexados. False se os gráficos acompanham o índice dos pontos de dados.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'chartDataPointTrack: boolean;'
    return:
      type: boolean
- name: comments
  uid: excel!Excel.Workbook#comments:member
  package: excel!
  fullName: comments
  summary: Representa uma coleção de comentários associados à pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly comments: CommentCollection;'
    return:
      type: <xref uid="excel!Excel.CommentCollection:interface" />
- name: customXmlParts
  uid: excel!Excel.Workbook#customXmlParts:member
  package: excel!
  fullName: customXmlParts
  summary: Representa a coleção de partes XML personalizadas contidas por esta pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly customXmlParts: CustomXmlPartCollection;'
    return:
      type: <xref uid="excel!Excel.CustomXmlPartCollection:interface" />
- name: dataConnections
  uid: excel!Excel.Workbook#dataConnections:member
  package: excel!
  fullName: dataConnections
  summary: Representa todas as conexões de dados na pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataConnections: DataConnectionCollection;'
    return:
      type: <xref uid="excel!Excel.DataConnectionCollection:interface" />
- name: isDirty
  uid: excel!Excel.Workbook#isDirty:member
  package: excel!
  fullName: isDirty
  summary: Especifica se foram feitas alterações desde a última vez em que a pasta de trabalho foi salva. Você pode definir essa propriedade como true se quiser fechar uma pasta de trabalho modificada sem salvá-la ou ser solicitado a salvá-la.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'isDirty: boolean;'
    return:
      type: boolean
- name: name
  uid: excel!Excel.Workbook#name:member
  package: excel!
  fullName: name
  summary: Obtém o nome da pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: names
  uid: excel!Excel.Workbook#names:member
  package: excel!
  fullName: names
  summary: Representa uma coleção de itens denominados de escopo da pasta de trabalho (chamados intervalos e constantes).
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly names: NamedItemCollection;'
    return:
      type: <xref uid="excel!Excel.NamedItemCollection:interface" />
- name: pivotTables
  uid: excel!Excel.Workbook#pivotTables:member
  package: excel!
  fullName: pivotTables
  summary: Representa uma coleção de Tabelas Dinâmicas associadas à pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pivotTables: PivotTableCollection;'
    return:
      type: <xref uid="excel!Excel.PivotTableCollection:interface" />
- name: pivotTableStyles
  uid: excel!Excel.Workbook#pivotTableStyles:member
  package: excel!
  fullName: pivotTableStyles
  summary: Representa uma coleção de Tabelas Dinâmicas associadas à pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pivotTableStyles: PivotTableStyleCollection;'
    return:
      type: <xref uid="excel!Excel.PivotTableStyleCollection:interface" />
- name: previouslySaved
  uid: excel!Excel.Workbook#previouslySaved:member
  package: excel!
  fullName: previouslySaved
  summary: Especifica se a pasta de trabalho já foi salva localmente ou online.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly previouslySaved: boolean;'
    return:
      type: boolean
- name: properties
  uid: excel!Excel.Workbook#properties:member
  package: excel!
  fullName: properties
  summary: Obtém as propriedades da pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly properties: DocumentProperties;'
    return:
      type: <xref uid="excel!Excel.DocumentProperties:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let titleValue = \"Excel document properties API\";\n    let subjectValue = \"Set and get document properties\";\n    let keywordsValue = \"Set and get operations\";\n    let commentsValue = \"This is an Excel document properties API code sample\";\n    let categoryValue = \"Office Add-ins\";\n    let managerValue = \"John\";\n    let companyValue = \"Microsoft\";\n\n    let docProperties = context.workbook.properties;\n\n    // Set the writeable document properties.\n    docProperties.title = titleValue;\n    docProperties.subject = subjectValue;\n    docProperties.keywords = keywordsValue;\n    docProperties.comments = commentsValue;\n    docProperties.category = categoryValue;\n    docProperties.manager = managerValue;\n    docProperties.company = companyValue;\n\n    await context.sync();\n\n    console.log(\"Set the following document properties: title, subject, keywords, comments, category, manager, company.\");\n}\n```"
- name: protection
  uid: excel!Excel.Workbook#protection:member
  package: excel!
  fullName: protection
  summary: Retorna o objeto de proteção de uma pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly protection: WorkbookProtection;'
    return:
      type: <xref uid="excel!Excel.WorkbookProtection:interface" />
- name: readOnly
  uid: excel!Excel.Workbook#readOnly:member
  package: excel!
  fullName: readOnly
  summary: True se a pasta de trabalho estiver aberta no modo somente leitura.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly readOnly: boolean;'
    return:
      type: boolean
- name: slicers
  uid: excel!Excel.Workbook#slicers:member
  package: excel!
  fullName: slicers
  summary: Representa uma coleção de segmentações de dados associados à pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly slicers: SlicerCollection;'
    return:
      type: <xref uid="excel!Excel.SlicerCollection:interface" />
- name: slicerStyles
  uid: excel!Excel.Workbook#slicerStyles:member
  package: excel!
  fullName: slicerStyles
  summary: Representa uma coleção de SlicerStyles associados à pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly slicerStyles: SlicerStyleCollection;'
    return:
      type: <xref uid="excel!Excel.SlicerStyleCollection:interface" />
- name: styles
  uid: excel!Excel.Workbook#styles:member
  package: excel!
  fullName: styles
  summary: Representa uma coleção de estilos associados à pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly styles: StyleCollection;'
    return:
      type: <xref uid="excel!Excel.StyleCollection:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let styles = context.workbook.styles;\n\n    // Add a new style to the style collection.\n    // Styles is in the Home tab ribbon.\n    styles.add(\"Diagonal Orientation Style\");\n          \n    let newStyle = styles.getItem(\"Diagonal Orientation Style\");\n    \n    // The \"Diagonal Orientation Style\" properties.\n    newStyle.textOrientation = 38;\n    newStyle.autoIndent = true;\n    newStyle.includeProtection = true;\n    newStyle.shrinkToFit = true;\n    newStyle.locked = false;\n    \n    await context.sync();\n\n    console.log(\"Successfully added a new style with diagonal orientation to the Home tab ribbon.\");\n}\n```"
- name: tables
  uid: excel!Excel.Workbook#tables:member
  package: excel!
  fullName: tables
  summary: Representa uma coleção de tabelas associadas à pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tables: TableCollection;'
    return:
      type: <xref uid="excel!Excel.TableCollection:interface" />
- name: tableStyles
  uid: excel!Excel.Workbook#tableStyles:member
  package: excel!
  fullName: tableStyles
  summary: Representa uma coleção de TableStyles associadas à pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tableStyles: TableStyleCollection;'
    return:
      type: <xref uid="excel!Excel.TableStyleCollection:interface" />
- name: timelineStyles
  uid: excel!Excel.Workbook#timelineStyles:member
  package: excel!
  fullName: timelineStyles
  summary: Representa uma coleção de TimelineStyles associados à pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly timelineStyles: TimelineStyleCollection;'
    return:
      type: <xref uid="excel!Excel.TimelineStyleCollection:interface" />
- name: usePrecisionAsDisplayed
  uid: excel!Excel.Workbook#usePrecisionAsDisplayed:member
  package: excel!
  fullName: usePrecisionAsDisplayed
  summary: True se os cálculos dessa pasta de trabalho forem efetuados usando apenas a precisão dos números conforme forem exibidos. Os dados perderão permanentemente a precisão ao mudar essa propriedade de false para true.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'usePrecisionAsDisplayed: boolean;'
    return:
      type: boolean
- name: worksheets
  uid: excel!Excel.Workbook#worksheets:member
  package: excel!
  fullName: worksheets
  summary: Representa uma coleção de planilhas associadas à pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheets: WorksheetCollection;'
    return:
      type: <xref uid="excel!Excel.WorksheetCollection:interface" />
methods:
- name: getActiveCell()
  uid: excel!Excel.Workbook#getActiveCell:member(1)
  package: excel!
  fullName: getActiveCell()
  summary: Obtém a célula ativa no momento da pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveCell(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n\n    let myWorkbook = context.workbook;\n    let activeCell = myWorkbook.getActiveCell();\n    activeCell.load(\"address\");\n\n    await context.sync();\n    \n    console.log(\"The active cell is \" + activeCell.address);\n}\n```"
- name: getActiveChart()
  uid: excel!Excel.Workbook#getActiveChart:member(1)
  package: excel!
  fullName: getActiveChart()
  summary: Obtém o gráfico ativo no momento na pasta de trabalho. Se não houver nenhum gráfico ativo, uma `ItemNotFound` exceção será lançada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveChart(): Chart;'
    return:
      type: <xref uid="excel!Excel.Chart:interface" />
      description: ''
- name: getActiveChartOrNullObject()
  uid: excel!Excel.Workbook#getActiveChartOrNullObject:member(1)
  package: excel!
  fullName: getActiveChartOrNullObject()
  summary: Obtém o gráfico ativo no momento na pasta de trabalho. Se não houver nenhum gráfico ativo, um objeto nulo será retornado.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveChartOrNullObject(): Chart;'
    return:
      type: <xref uid="excel!Excel.Chart:interface" />
      description: ''
- name: getActiveSlicer()
  uid: excel!Excel.Workbook#getActiveSlicer:member(1)
  package: excel!
  fullName: getActiveSlicer()
  summary: Obtém a segmentação de dados ativa no momento na pasta de trabalho. Se não houver um slicer ativo, uma `ItemNotFound` exceção será lançada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveSlicer(): Slicer;'
    return:
      type: <xref uid="excel!Excel.Slicer:interface" />
      description: ''
- name: getActiveSlicerOrNullObject()
  uid: excel!Excel.Workbook#getActiveSlicerOrNullObject:member(1)
  package: excel!
  fullName: getActiveSlicerOrNullObject()
  summary: Obtém a segmentação de dados ativa no momento na pasta de trabalho. Se não houver segmentação de dados ativa, um objeto nulo será retornado.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveSlicerOrNullObject(): Slicer;'
    return:
      type: <xref uid="excel!Excel.Slicer:interface" />
      description: ''
- name: getSelectedRange()
  uid: excel!Excel.Workbook#getSelectedRange:member(1)
  package: excel!
  fullName: getSelectedRange()
  summary: Obtém o intervalo único selecionado atualmente da pasta de trabalho. Se houver vários intervalos selecionados, este método gerará um erro.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getSelectedRanges()
  uid: excel!Excel.Workbook#getSelectedRanges:member(1)
  package: excel!
  fullName: getSelectedRanges()
  summary: Obtém um ou mais intervalos atualmente selecionados da pasta de trabalho. Ao contrário de getSelectedRange(), esse método retorna um objeto RangeAreas que representa todos os intervalos selecionados.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedRanges(): RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n\n    let selectedRanges = context.workbook.getSelectedRanges();\n    selectedRanges.format.fill.color = \"lightblue\";\n\n    await context.sync();\n})\n```"
- name: load(propertyNames)
  uid: excel!Excel.Workbook#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 8163385dfac4e4ed347cdd90ca0a682dabffffe4
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49412633"
