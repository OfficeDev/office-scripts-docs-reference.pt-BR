### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorksheetFreezePanes:interface'
    name: Excel.WorksheetFreezePanes
    fullName: Excel.WorksheetFreezePanes
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.WorksheetFreezePanes#freezeAt:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#freezeColumns:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#freezeRows:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#getLocationOrNullObject:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#load:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#unfreeze:member(1)'
  - uid: 'excel!Excel.WorksheetFreezePanes#freezeAt:member(1)'
    summary: Define as células congeladas no modo de exibição da planilha ativa. O intervalo fornecido corresponde a células que serão congeladas no painel superior e à esquerda.
    name: freezeAt(frozenRange)
    fullName: freezeAt(frozenRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'freezeAt(frozenRange: Range | string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");

              // Freeze the specified range in top-and-left-most pane of the worksheet.
              sheet.freezePanes.freezeAt(sheet.getRange("H2:K5"));

              await context.sync();
          }
          ```
      parameters:
        - id: frozenRange
          description: Um intervalo que representa as células a serem congeladas ou nulo para remover todos os painéis congelados.
          type:
            - 'excel!Excel.WorksheetFreezePanes#freezeAt~0:complex'
  - uid: 'excel!Excel.WorksheetFreezePanes#freezeColumns:member(1)'
    summary: Congela a primeira colunas da planilha no local.
    name: freezeColumns(count)
    fullName: freezeColumns(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'freezeColumns(count?: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");

              // Freeze the first two columns in the worksheet.
              sheet.freezePanes.freezeColumns(2);

              await context.sync();
          }
          ```
      parameters:
        - id: count
          description: Número opcional de colunas a serem congeladas ou zero para descongelar todas as colunas
          type:
            - number
  - uid: 'excel!Excel.WorksheetFreezePanes#freezeRows:member(1)'
    summary: Congela as linhas superiores da planilha no local.
    name: freezeRows(count)
    fullName: freezeRows(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'freezeRows(count?: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");

              // Freeze the top two rows in the worksheet.
              sheet.freezePanes.freezeRows(2);

              await context.sync();
          }
          ```
      parameters:
        - id: count
          description: Número opcional de linhas a serem congeladas ou zero para descongelar todas as linhas
          type:
            - number
  - uid: 'excel!Excel.WorksheetFreezePanes#getLocationOrNullObject:member(1)'
    summary: 'Obtém um intervalo que descreve as células congeladas no modo de exibição da planilha ativa. O intervalo congelado corresponde às células que estão congeladas no painel superior e à esquerda. Se não houver nenhum painel congelado, retorna um objeto NULL.'
    name: getLocationOrNullObject()
    fullName: getLocationOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLocationOrNullObject(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let frozenRange = sheet.freezePanes.getLocationOrNullObject();
              frozenRange.load("address");

              await context.sync();

              if (frozenRange.isNullObject) {
                  console.log(`The worksheet does not contain a frozen pane.`);
              } else {
                  console.log(`The address of the frozen range (cells that are frozen in the top-and-left-most pane) is "${frozenRange.address}"`);
              }
          }
          ```
  - uid: 'excel!Excel.WorksheetFreezePanes#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorksheetFreezePanes#unfreeze:member(1)'
    summary: Remove todos os painéis congelados na planilha.
    name: unfreeze()
    fullName: unfreeze()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unfreeze(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              sheet.freezePanes.unfreeze();

              await context.sync();
          }
          ```
references:
  - uid: 'excel!Excel.WorksheetFreezePanes#freezeAt~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.Range:interface'
    name: Range
    fullName: Excel.Range