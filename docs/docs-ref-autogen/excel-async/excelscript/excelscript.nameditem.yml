### YamlMime:TSType
name: Excel.NamedItem
uid: excel!Excel.NamedItem:interface
package: excel!
fullName: Excel.NamedItem
summary: Representa um nome definido para um intervalo de células ou um valor. Os nomes podem ser objetos com nome primitivo (como visto no tipo abaixo), um objeto Range ou uma referência a um intervalo. Use esse objeto para obter um objeto de intervalo associado aos nomes.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: arrayValues
  uid: excel!Excel.NamedItem#arrayValues:member
  package: excel!
  fullName: arrayValues
  summary: Retorna um objeto que contém valores e tipos do item nomeado.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly arrayValues: NamedItemArrayValues;'
    return:
      type: <xref uid="excel!Excel.NamedItemArrayValues:interface" />
- name: comment
  uid: excel!Excel.NamedItem#comment:member
  package: excel!
  fullName: comment
  summary: Especifica o comentário associado a esse nome.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'comment: string;'
    return:
      type: string
- name: formula
  uid: excel!Excel.NamedItem#formula:member
  package: excel!
  fullName: formula
  summary: A fórmula do item nomeado. A fórmula sempre começa com um sinal de "=".
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formula: any;'
    return:
      type: any
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Get the named item\n    let myNamedItem = sheet.names.getItemOrNullObject(\"MyRange\");\n    myNamedItem.load(\"name, formula\");\n    await context.sync();\n\n    if (myNamedItem.isNullObject) {\n        console.log(`There is no named item. Create it with \"Add named item for a range\" first.`);\n    } else {                    \n        // Update named item to point to the second range\n        myNamedItem.formula = \"=Sample!$B$10:$D$14\";\n        sheet.getRange(\"B10:D14\").select();\n        await context.sync();\n\n        console.log(`Just updated the named item \"${myNamedItem.name}\" -- it's now located here: ${myNamedItem.formula}`);\n    }\n}\n```"
- name: name
  uid: excel!Excel.NamedItem#name:member
  package: excel!
  fullName: name
  summary: O nome do objeto.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: scope
  uid: excel!Excel.NamedItem#scope:member
  package: excel!
  fullName: scope
  summary: 'Especifica se o nome tem como escopo a pasta de trabalho ou uma planilha específica. Os valores possíveis são: planilha, pasta de trabalho.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly scope: NamedItemScope | "Worksheet" | "Workbook";'
    return:
      type: <xref uid="excel!Excel.NamedItemScope:enum" /> | "Worksheet" | "Workbook"
- name: type
  uid: excel!Excel.NamedItem#type:member
  package: excel!
  fullName: type
  summary: Especifica o tipo do valor retornado pela fórmula do nome. Consulte Excel. NamedItemType para obter detalhes.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      readonly type:
                  | NamedItemType
                  | "String"
                  | "Integer"
                  | "Double"
                  | "Boolean"
                  | "Range"
                  | "Error"
                  | "Array";
    return:
      type: >-
        | <xref uid="excel!Excel.NamedItemType:enum" />
                    | "String"
                    | "Integer"
                    | "Double"
                    | "Boolean"
                    | "Range"
                    | "Error"
                    | "Array"
- name: value
  uid: excel!Excel.NamedItem#value:member
  package: excel!
  fullName: value
  summary: Representa o valor calculado pela fórmula do nome. Para um intervalo nomeado, retornará o endereço do intervalo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly value: any;'
    return:
      type: any
- name: visible
  uid: excel!Excel.NamedItem#visible:member
  package: excel!
  fullName: visible
  summary: Especifica se o objeto está visível.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'visible: boolean;'
    return:
      type: boolean
- name: worksheet
  uid: excel!Excel.NamedItem#worksheet:member
  package: excel!
  fullName: worksheet
  summary: Retorna a planilha em que o item nomeado tem escopo. Gera um erro se o item estiver no escopo da pasta de trabalho.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheet: Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:interface" />
- name: worksheetOrNullObject
  uid: excel!Excel.NamedItem#worksheetOrNullObject:member
  package: excel!
  fullName: worksheetOrNullObject
  summary: Retorna a planilha em que o item nomeado tem escopo. Retornará um objeto null se o item tiver escopo para a pasta de trabalho em vez disso.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheetOrNullObject: Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:interface" />
methods:
- name: delete()
  uid: excel!Excel.NamedItem#delete:member(1)
  package: excel!
  fullName: delete()
  summary: Exclui o nome fornecido.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let totalName = sheet.names.getItemOrNullObject(\"TotalAmount\");\n    totalName.load();\n    await context.sync();\n\n    if (totalName.value) {\n        totalName.delete();\n\n        // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.\n        sheet.getRange(\"D11\").values = [[\"=SUM(ExpensesTable[AMOUNT])\"]];\n    } else {\n        console.log(\"No named item created for the formula.\");\n    }\n\n    await context.sync();\n}\n```"
- name: getRange()
  uid: excel!Excel.NamedItem#getRange:member(1)
  package: excel!
  fullName: getRange()
  summary: Retorna o objeto Range associado ao nome. Gerará um erro se o tipo do item nomeado não for um intervalo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getRangeOrNullObject()
  uid: excel!Excel.NamedItem#getRangeOrNullObject:member(1)
  package: excel!
  fullName: getRangeOrNullObject()
  summary: Retorna o objeto Range associado ao nome. Retornará um objeto null se o tipo do item nomeado não for um intervalo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRangeOrNullObject(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.NamedItem#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 997de6c6512e3f455b29d74df0acc11e054a7739
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49419898"
