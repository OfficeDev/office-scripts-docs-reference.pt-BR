### YamlMime:TSType
name: Excel.PivotTableCollection
uid: excel!Excel.PivotTableCollection:interface
package: excel!
fullName: Excel.PivotTableCollection
summary: Representa uma coleção de todas as Tabelas Dinâmicas que fazem parte da pasta de trabalho ou planilha.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: add(name, source, destination)
  uid: excel!Excel.PivotTableCollection#add:member(1)
  package: excel!
  fullName: add(name, source, destination)
  summary: Adicione uma tabela dinâmica com base nos dados de origem especificados e insira-a na célula superior esquerda do intervalo de destino.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      add(
                  name: string,
                  source: Range | string | Table,
                  destination: Range | string
              ): PivotTable;
    parameters:
    - id: name
      description: O nome da nova tabela dinâmica.
      type: string
    - id: source
      description: Os dados de origem da nova tabela dinâmica, podem ser um intervalo (ou um endereço de cadeia de caracteres incluindo o nome da planilha) ou uma tabela.
      type: <xref uid="excel!Excel.Range:interface" /> | string | <xref uid="excel!Excel.Table:interface" />
    - id: destination
      description: A célula no canto superior esquerdo do intervalo de destino do relatório de tabela dinâmica (o intervalo na planilha em que o relatório resultante será inserido).
      type: "<xref uid=\"excel!Excel.Range:interface\" /> | string\n        "
    return:
      type: <xref uid="excel!Excel.PivotTable:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let rangeToAnalyze = context.workbook.worksheets.getItem(\"Data\").getRange(\"A1:E21\");\n    let rangeToPlacePivot = context.workbook.worksheets.getItem(\"Pivot\").getRange(\"A2\");\n    context.workbook.worksheets.getItem(\"Pivot\").pivotTables.add(\"Farm Sales\", rangeToAnalyze, rangeToPlacePivot);\n\n    await context.sync();\n}\n```"
- name: getCount()
  uid: excel!Excel.PivotTableCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: Obtém o número de tabelas dinâmicas na coleção.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): ClientResult<number>;'
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;
      description: ''
- name: getItem(name)
  uid: excel!Excel.PivotTableCollection#getItem:member(1)
  package: excel!
  fullName: getItem(name)
  summary: Obtém uma Tabela Dinâmica por nome.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(name: string): PivotTable;'
    parameters:
    - id: name
      description: Nome da Tabela Dinâmica a ser recuperada.
      type: string
    return:
      type: <xref uid="excel!Excel.PivotTable:interface" />
      description: ''
- name: getItemOrNullObject(name)
  uid: excel!Excel.PivotTableCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(name)
  summary: Obtém uma Tabela Dinâmica por nome. Se a tabela dinâmica não existir, retornará um objeto null.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(name: string): PivotTable;'
    parameters:
    - id: name
      description: Nome da Tabela Dinâmica a ser recuperada.
      type: string
    return:
      type: <xref uid="excel!Excel.PivotTable:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.PivotTableCollection#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
      type: string | string[]
    return:
      type: void
      description: ''
- name: refreshAll()
  uid: excel!Excel.PivotTableCollection#refreshAll:member(1)
  package: excel!
  fullName: refreshAll()
  summary: Atualiza todas as tabelas dinâmicas da coleção.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'refreshAll(): void;'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 4097e746efd052c47ad386b3f52711778b10c0ee
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49418832"
