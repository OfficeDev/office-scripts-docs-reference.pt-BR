### YamlMime:UniversalReference
items:
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat:interface'
    summary: 'Um objeto que encapsula o intervalo, o formato, a regra e outras propriedades de um formato condicional. Para saber mais sobre o modelo de objeto de formatação condicional, leia [aplicar formatação condicional a intervalos do Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-conditional-formatting)<!-- -->.'
    name: ExcelScript.ConditionalFormat
    fullName: ExcelScript.ConditionalFormat
    langs:
      - typeScript
    type: interface
    package: ExcelScript!
    children:
      - 'ExcelScript!ExcelScript.ConditionalFormat#delete:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getCellValue:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getColorScale:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getCustom:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getDataBar:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getIconSet:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getId:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getPreset:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getPriority:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getRange:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getRanges:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getStopIfTrue:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getTextComparison:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getTopBottom:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getType:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#setPriority:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#setStopIfTrue:member(1)'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#delete:member(1)'
    summary: Exclui esse formato condicional.
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getCellValue:member(1)'
    summary: 'Retorna as propriedades do formato condicional do valor da célula se o formato condicional atual for um tipo Cellvalue. Por exemplo, para formatar todas as células entre 5 e 10.'
    name: getCellValue()
    fullName: getCellValue()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCellValue(): CellValueConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getCellValue~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getColorScale:member(1)'
    summary: Retorna as propriedades de formato condicional ColorScale se o formato condicional atual for um tipo ColorScale.
    name: getColorScale()
    fullName: getColorScale()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColorScale(): ColorScaleConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getColorScale~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getCustom:member(1)'
    summary: Retorna as propriedades de formato condicional personalizado se o formato condicional atual for um tipo personalizado.
    name: getCustom()
    fullName: getCustom()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCustom(): CustomConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getCustom~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getDataBar:member(1)'
    summary: Retorna as propriedades da barra de dados se o formato condicional atual for uma barra de dados.
    name: getDataBar()
    fullName: getDataBar()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBar(): DataBarConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getDataBar~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getIconSet:member(1)'
    summary: Retorna as propriedades de formato condicional do Iconset se o formato condicional atual for um tipo de Íconeset.
    name: getIconSet()
    fullName: getIconSet()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIconSet(): IconSetConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getIconSet~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getId:member(1)'
    summary: A prioridade do formato condicional na atual ConditionalFormatCollection.
    name: getId()
    fullName: getId()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getId(): string;'
      return:
        type:
          - string
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getPreset:member(1)'
    summary: Retorna o formato condicional de critérios predefinidos. Confira Excel. PresetCriteriaConditionalFormat para obter mais detalhes.
    name: getPreset()
    fullName: getPreset()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPreset(): PresetCriteriaConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getPreset~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getPriority:member(1)'
    summary: 'A prioridade (ou índice) dentro da coleção de formato condicional em que esse formato condicional existe atualmente no. Alterar isso também altera as prioridades de formatos condicionais, para permitir uma ordem de prioridade contígua. Use uma prioridade negativa para começar de trás. As prioridades maiores do que os limites serão obtidas e definidas com a prioridade máxima (ou mínima se negativa). Observe também que, se você alterar a prioridade, será necessário buscar novamente uma nova cópia do objeto nesse novo local de prioridade, se quiser fazer outras alterações.'
    name: getPriority()
    fullName: getPriority()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPriority(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getRange:member(1)'
    summary: 'Retorna o intervalo ao qual o formato conditonal é aplicado, ou um objeto NULL, se o formato condicional for aplicado a vários intervalos.'
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Range;'
      return:
        type:
          - 'ExcelScript!ExcelScript.Range:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getRanges:member(1)'
    summary: 'Retorna o RangeAreas, compreendendo um ou mais intervalos retangulares, ao qual o formato condicional é aplicado.'
    name: getRanges()
    fullName: getRanges()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRanges(): RangeAreas;'
      return:
        type:
          - 'ExcelScript!ExcelScript.RangeAreas:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getStopIfTrue:member(1)'
    summary: 'Se as condições desse formato condicional forem atendidas, nenhum formato de prioridade mais baixa terá efeito nessa célula. Nulo em databars, conjuntos de ícones e colorscales como não há o conceito de StopIfTrue para estes'
    name: getStopIfTrue()
    fullName: getStopIfTrue()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getStopIfTrue(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getTextComparison:member(1)'
    summary: 'Retorna as propriedades de formato condicional de texto específico se o formato condicional atual for um tipo de texto. Por exemplo, para formatar células que correspondem à palavra "text".'
    name: getTextComparison()
    fullName: getTextComparison()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextComparison(): TextConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getTextComparison~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getTopBottom:member(1)'
    summary: Retorna as propriedades de formato condicional superior/inferior se o formato condicional atual for um tipo TopBottom. Por exemplo para formatar os primeiros 10% ou 10 itens inferiores.
    name: getTopBottom()
    fullName: getTopBottom()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTopBottom(): TopBottomConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getTopBottom~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getType:member(1)'
    summary: Um tipo de formato condicional. Apenas um pode ser definido por vez.
    name: getType()
    fullName: getType()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getType(): ConditionalFormatType;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormatType:enum'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#setPriority:member(1)'
    summary: 'A prioridade (ou índice) dentro da coleção de formato condicional em que esse formato condicional existe atualmente no. Alterar isso também altera as prioridades de formatos condicionais, para permitir uma ordem de prioridade contígua. Use uma prioridade negativa para começar de trás. As prioridades maiores do que os limites serão obtidas e definidas com a prioridade máxima (ou mínima se negativa). Observe também que, se você alterar a prioridade, será necessário buscar novamente uma nova cópia do objeto nesse novo local de prioridade, se quiser fazer outras alterações.'
    name: setPriority(priority)
    fullName: setPriority(priority)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPriority(priority: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: priority
          description: ''
          type:
            - number
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#setStopIfTrue:member(1)'
    summary: 'Se as condições desse formato condicional forem atendidas, nenhum formato de prioridade mais baixa terá efeito nessa célula. Nulo em databars, conjuntos de ícones e colorscales como não há o conceito de StopIfTrue para estes'
    name: setStopIfTrue(stopIfTrue)
    fullName: setStopIfTrue(stopIfTrue)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setStopIfTrue(stopIfTrue: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: stopIfTrue
          description: ''
          type:
            - boolean
references:
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getCellValue~0:complex'
    name: CellValueConditionalFormat | undefined
    fullName: ExcelScript.CellValueConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.CellValueConditionalFormat:interface'
        name: CellValueConditionalFormat
        fullName: ExcelScript.CellValueConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getColorScale~0:complex'
    name: ColorScaleConditionalFormat | undefined
    fullName: ExcelScript.ColorScaleConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.ColorScaleConditionalFormat:interface'
        name: ColorScaleConditionalFormat
        fullName: ExcelScript.ColorScaleConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getCustom~0:complex'
    name: CustomConditionalFormat | undefined
    fullName: ExcelScript.CustomConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.CustomConditionalFormat:interface'
        name: CustomConditionalFormat
        fullName: ExcelScript.CustomConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getDataBar~0:complex'
    name: DataBarConditionalFormat | undefined
    fullName: ExcelScript.DataBarConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat:interface'
        name: DataBarConditionalFormat
        fullName: ExcelScript.DataBarConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getIconSet~0:complex'
    name: IconSetConditionalFormat | undefined
    fullName: ExcelScript.IconSetConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.IconSetConditionalFormat:interface'
        name: IconSetConditionalFormat
        fullName: ExcelScript.IconSetConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getPreset~0:complex'
    name: PresetCriteriaConditionalFormat | undefined
    fullName: ExcelScript.PresetCriteriaConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.PresetCriteriaConditionalFormat:interface'
        name: PresetCriteriaConditionalFormat
        fullName: ExcelScript.PresetCriteriaConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.Range:interface'
    name: Range
    fullName: ExcelScript.Range
  - uid: 'ExcelScript!ExcelScript.RangeAreas:interface'
    name: RangeAreas
    fullName: ExcelScript.RangeAreas
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getTextComparison~0:complex'
    name: TextConditionalFormat | undefined
    fullName: ExcelScript.TextConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.TextConditionalFormat:interface'
        name: TextConditionalFormat
        fullName: ExcelScript.TextConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getTopBottom~0:complex'
    name: TopBottomConditionalFormat | undefined
    fullName: ExcelScript.TopBottomConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.TopBottomConditionalFormat:interface'
        name: TopBottomConditionalFormat
        fullName: ExcelScript.TopBottomConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormatType:enum'
    name: ConditionalFormatType
    fullName: ExcelScript.ConditionalFormatType