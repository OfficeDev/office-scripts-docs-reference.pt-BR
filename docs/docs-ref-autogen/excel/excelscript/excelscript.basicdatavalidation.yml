### YamlMime:TSType
name: ExcelScript.BasicDataValidation
uid: ExcelScript!ExcelScript.BasicDataValidation:interface
package: ExcelScript!
fullName: ExcelScript.BasicDataValidation
summary: Representa os critérios básicos de validação de dados de tipo.
remarks: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```TypeScript\n/**\n * This script creates a data validation rule for the range B1:B5.\n * All values in that range must be a positive number.\n * Attempts to enter other values are blocked and an error message appears.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the range B1:B5 in the active worksheet.\n  const currentSheet = workbook.getActiveWorksheet();\n  const positiveNumberOnlyCells = currentSheet.getRange(\"B1:B5\");\n\n  // Create a data validation rule to only allow positive numbers.\n  const positiveNumberValidation: ExcelScript.BasicDataValidation = {\n    formula1: \"0\",\n    operator: ExcelScript.DataValidationOperator.greaterThan\n  };\n  const positiveNumberOnlyRule: ExcelScript.DataValidationRule = {\n    wholeNumber: positiveNumberValidation\n  };\n\n  // Set the rule on the range.\n  const rangeDataValidation = positiveNumberOnlyCells.getDataValidation();\n  rangeDataValidation.setRule(positiveNumberOnlyRule);\n\n  // Create an alert to appear when data other than positive numbers are entered.\n  const positiveNumberOnlyAlert: ExcelScript.DataValidationErrorAlert = {\n    message: \"Positive numbers only\",\n    showAlert: true,\n    style: ExcelScript.DataValidationAlertStyle.stop,\n    title: \"Invalid data\"\n  };\n  rangeDataValidation.setErrorAlert(positiveNumberOnlyAlert);\n}\n```"
isPreview: false
isDeprecated: false
type: interface
properties:
- name: formula1
  uid: ExcelScript!ExcelScript.BasicDataValidation#formula1:member
  package: ExcelScript!
  fullName: formula1
  summary: 'Especifica o operando à direita quando a propriedade do operador é definida como um operador binário como GreaterThan (o operando à esquerda é o valor que o usuário tenta inserir na célula). Com os operadores ternários Between e NotBetween, especifica o operando de limite inferior. Por exemplo, definir a fórmula 1 a 10 e o operador como GreaterThan significa que os dados válidos para o intervalo devem ser maiores que 10. Ao definir o valor, ele pode ser passado como um número, um objeto de intervalo ou uma fórmula de cadeia de caracteres (em que a cadeia de caracteres é um número stringizado, uma referência de célula como "=A1" ou uma fórmula como "=MIN(A1, B1)"). Ao recuperar o valor, ele sempre será retornado como uma fórmula de cadeia de caracteres, por exemplo: "=10", "=A1", "=SUM(A1:B5)", etc.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formula1: string | number | Range;'
    return:
      type: string | number | <xref uid="ExcelScript!ExcelScript.Range:interface" />
- name: formula2
  uid: ExcelScript!ExcelScript.BasicDataValidation#formula2:member
  package: ExcelScript!
  fullName: formula2
  summary: 'Com os operadores ternários Between e NotBetween, especifica o operando de limite superior. Não é usado com os operadores binários, como GreaterThan. Ao definir o valor, ele pode ser passado como um número, um objeto de intervalo ou uma fórmula de cadeia de caracteres (em que a cadeia de caracteres é um número stringizado, uma referência de célula como "=A1" ou uma fórmula como "=MIN(A1, B1)"). Ao recuperar o valor, ele sempre será retornado como uma fórmula de cadeia de caracteres, por exemplo: "=10", "=A1", "=SUM(A1:B5)", etc.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formula2?: string | number | Range;'
    return:
      type: string | number | <xref uid="ExcelScript!ExcelScript.Range:interface" />
- name: operator
  uid: ExcelScript!ExcelScript.BasicDataValidation#operator:member
  package: ExcelScript!
  fullName: operator
  summary: O operador a ser usado para validar os dados.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'operator: DataValidationOperator;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.DataValidationOperator:enum" />
metadata:
  ms.openlocfilehash: 3834dec5500b5631f99daf2f65608975ea9480e3
  ms.sourcegitcommit: f004fc5d3ebfc650a5a353e05f1d75c2bc330f09
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 10/26/2022
  ms.locfileid: "68698191"
