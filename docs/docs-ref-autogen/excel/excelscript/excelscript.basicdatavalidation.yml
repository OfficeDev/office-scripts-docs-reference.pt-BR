### YamlMime:UniversalReference
items:
  - uid: 'ExcelScript!ExcelScript.BasicDataValidation:interface'
    summary: Representa os critérios de validação de dados de tipo básicos.
    name: ExcelScript.BasicDataValidation
    fullName: ExcelScript.BasicDataValidation
    langs:
      - typeScript
    type: interface
    package: ExcelScript!
    children:
      - 'ExcelScript!ExcelScript.BasicDataValidation#formula1:member'
      - 'ExcelScript!ExcelScript.BasicDataValidation#formula2:member'
      - 'ExcelScript!ExcelScript.BasicDataValidation#operator:member'
  - uid: 'ExcelScript!ExcelScript.BasicDataValidation#formula1:member'
    summary: 'Especifica o operando direito quando a Propriedade Operator é definida como um operador binário como GreaterThan (o operando esquerdo é o valor que o usuário tenta inserir na célula). Com os operadores ternários between e não between, especifica o operando de limite inferior. Por exemplo, a definição de Formula1 como 10 e o operador como GreaterThan significa que os dados válidos para o intervalo devem ser maiores que 10. Ao definir o valor, ele pode ser passado como um número, um objeto Range ou uma fórmula de cadeia de caracteres (onde a cadeia de caracteres é um número em formato, uma referência de célula como "= a1" ou uma fórmula como "= MIN (a1, B1)"). Ao recuperar o valor, ele sempre será retornado como uma fórmula de cadeia de caracteres, por exemplo: "= 10", "= a1", "= SUM (a1: B5)", etc.'
    name: formula1
    fullName: formula1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula1: string | number | Range;'
      return:
        type:
          - 'ExcelScript!ExcelScript.BasicDataValidation#formula1~0:complex'
  - uid: 'ExcelScript!ExcelScript.BasicDataValidation#formula2:member'
    summary: 'Com os operadores ternários between e não between, especifica o operando de limite superior. Não é usado com os operadores binários, como GreaterThan. Ao definir o valor, ele pode ser passado como um número, um objeto Range ou uma fórmula de cadeia de caracteres (onde a cadeia de caracteres é um número em formato, uma referência de célula como "= a1" ou uma fórmula como "= MIN (a1, B1)"). Ao recuperar o valor, ele sempre será retornado como uma fórmula de cadeia de caracteres, por exemplo: "= 10", "= a1", "= SUM (a1: B5)", etc.'
    name: formula2
    fullName: formula2
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula2?: string | number | Range;'
      return:
        type:
          - 'ExcelScript!ExcelScript.BasicDataValidation#formula2~0:complex'
  - uid: 'ExcelScript!ExcelScript.BasicDataValidation#operator:member'
    summary: O operador a ser usado para validar os dados.
    name: operator
    fullName: operator
    langs:
      - typeScript
    type: property
    syntax:
      content: 'operator: DataValidationOperator;'
      return:
        type:
          - 'ExcelScript!ExcelScript.DataValidationOperator:enum'
references:
  - uid: 'ExcelScript!ExcelScript.BasicDataValidation#formula1~0:complex'
    name: string | number | Range
    fullName: string | number | ExcelScript.Range
    spec.typeScript:
      - name: 'string | number | '
        fullName: 'string | number | '
      - uid: 'ExcelScript!ExcelScript.Range:interface'
        name: Range
        fullName: ExcelScript.Range
  - uid: 'ExcelScript!ExcelScript.BasicDataValidation#formula2~0:complex'
    name: string | number | Range
    fullName: string | number | ExcelScript.Range
    spec.typeScript:
      - name: 'string | number | '
        fullName: 'string | number | '
      - uid: 'ExcelScript!ExcelScript.Range:interface'
        name: Range
        fullName: ExcelScript.Range
  - uid: 'ExcelScript!ExcelScript.DataValidationOperator:enum'
    name: DataValidationOperator
    fullName: ExcelScript.DataValidationOperator