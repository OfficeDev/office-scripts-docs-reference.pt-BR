### YamlMime:UniversalReference
items:
  - uid: 'ExcelScript!ExcelScript.DateTimeDataValidation:interface'
    summary: Representa os critérios de validação de dados de data.
    name: ExcelScript.DateTimeDataValidation
    fullName: ExcelScript.DateTimeDataValidation
    langs:
      - typeScript
    type: interface
    package: ExcelScript!
    children:
      - 'ExcelScript!ExcelScript.DateTimeDataValidation#formula1:member'
      - 'ExcelScript!ExcelScript.DateTimeDataValidation#formula2:member'
      - 'ExcelScript!ExcelScript.DateTimeDataValidation#operator:member'
  - uid: 'ExcelScript!ExcelScript.DateTimeDataValidation#formula1:member'
    summary: 'Especifica o operando direito quando a Propriedade Operator é definida como um operador binário como GreaterThan (o operando esquerdo é o valor que o usuário tenta inserir na célula). Com os operadores ternários between e não between, especifica o operando de limite inferior. Ao definir o valor, ele pode ser passado como uma data, um objeto Range ou uma fórmula de cadeia de caracteres (onde a cadeia de caracteres é uma data/hora em formato no formato ISO8601, uma referência de célula como "= a1" ou uma fórmula como "= MIN (a1, B1)"). Ao recuperar o valor, ele sempre será retornado como uma fórmula de cadeia de caracteres, por exemplo: "= 10", "= a1", "= SUM (a1: B5)", etc.'
    name: formula1
    fullName: formula1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula1: string | Date | Range;'
      return:
        type:
          - 'ExcelScript!ExcelScript.DateTimeDataValidation#formula1~0:complex'
  - uid: 'ExcelScript!ExcelScript.DateTimeDataValidation#formula2:member'
    summary: 'Com os operadores ternários between e não between, especifica o operando de limite superior. Não é usado com os operadores binários, como GreaterThan. Ao definir o valor, ele pode ser passado como uma data, um objeto Range ou uma cadeia de caracteres (onde a cadeia de caracteres é uma data/hora em formato no formato ISO8601, uma referência de célula como "= a1" ou uma fórmula como "= MIN (a1, B1)"). Ao recuperar o valor, ele sempre será retornado como uma fórmula de cadeia de caracteres, por exemplo: "= 10", "= a1", "= SUM (a1: B5)", etc.'
    name: formula2
    fullName: formula2
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula2?: string | Date | Range;'
      return:
        type:
          - 'ExcelScript!ExcelScript.DateTimeDataValidation#formula2~0:complex'
  - uid: 'ExcelScript!ExcelScript.DateTimeDataValidation#operator:member'
    summary: O operador a ser usado para validar os dados.
    name: operator
    fullName: operator
    langs:
      - typeScript
    type: property
    syntax:
      content: 'operator: DataValidationOperator;'
      return:
        type:
          - 'ExcelScript!ExcelScript.DataValidationOperator:enum'
references:
  - uid: 'ExcelScript!ExcelScript.DateTimeDataValidation#formula1~0:complex'
    name: string | Date | Range
    fullName: string | Date | ExcelScript.Range
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - uid: '!Date:interface'
        name: Date
        fullName: Date
      - name: ' | '
        fullName: ' | '
      - uid: 'ExcelScript!ExcelScript.Range:interface'
        name: Range
        fullName: ExcelScript.Range
  - uid: 'ExcelScript!ExcelScript.DateTimeDataValidation#formula2~0:complex'
    name: string | Date | Range
    fullName: string | Date | ExcelScript.Range
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - uid: '!Date:interface'
        name: Date
        fullName: Date
      - name: ' | '
        fullName: ' | '
      - uid: 'ExcelScript!ExcelScript.Range:interface'
        name: Range
        fullName: ExcelScript.Range
  - uid: 'ExcelScript!ExcelScript.DataValidationOperator:enum'
    name: DataValidationOperator
    fullName: ExcelScript.DataValidationOperator